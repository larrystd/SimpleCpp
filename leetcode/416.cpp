/*
416 分割等和子集

给你一个 只包含正整数 的 非空 数组 nums 。请你判断是否可以将这个数组分割成两个子集，使得两个子集的元素和相等。

能分成子集的肯定为偶数

递归求解

还可以动态规划求解
*/
#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>

using namespace std;

class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int total = accumulate(nums.begin(), nums.end(), 0);
        if (total % 2 == 1)
            return false;
        return findValue(nums,total/2, 0 );
        
    }

    bool findValue(vector<int>& nums, int remain_num, int start) {
        if (remain_num == 0)
            return true;
        if (remain_num < 0) // 剪枝
            return false;

        for (int i = start; i < nums.size(); i++) {
            if (findValue(nums, remain_num-nums[i], i+1))   // 注意这里是i+1
                return true;
            
        }

        return false;
    }
};

int main() {
    Solution s;
    vector<int> nums = {};
    cout << s.canPartition(nums) <<endl;
}